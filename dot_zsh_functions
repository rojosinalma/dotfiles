# TODO:
# - Check the duration and reuse them if still valid
# You need to have `assume-role` installed (brew install remind101/formulae/assume-role)

function ar(){
  # Let's set the env that called this func.
  local aws_environment
  local duration
  local stage
  aws_environment=$@

  # Checking the env actually exists (just add new ones to this case switch)
  # There needs to be a profile in ~/.aws/config to match the `aws_environment` name.
  case $aws_environment in
  "prod")
    duration="8h"
    stage="xepelin-production" # Cosmetic name
    ;;
  "sta")
    duration="1h"
    stage="staging"
    ;;
  "plat")
    duration="1h"
    stage="xepelin-platform"
    ;;
  "base")
    unset AWS_SESSION_TOKEN
    unset AWS_SECURITY_TOKEN
    unset AWS_ACCESS_KEY_ID
    unset AWS_SECRET_ACCESS_KEY
    export AWS_DEFAULT_PROFILE=base
    source ~/.aws/creds.base
    echo "Cleaned assumed role"
    return 0
    ;;
  "current")
    aws sts get-caller-identity
    return 0
    ;;
  "list")
    echo "List of options"
    echo "  prod"
    echo "  sta"
    echo "  plat"
    echo "  base (clear assumed roles)"
    return 0
    ;;
  *)
    echo "That environment doesn't exist, dummy"
    return 0
    ;;
  esac

  rm -f ~/.aws/assume-role-creds.$aws_environment # Delete old creds
  echo "Switched to ${stage} role for ${duration}"
  assume-role -duration $duration $aws_environment > ~/.aws/assume-role-creds.$aws_environment # Save new creds
  source ~/.aws/assume-role-creds.$aws_environment # Source new creds
  export AWS_DEFAULT_PROFILE=$aws_environment # Change aws profile
}

# Hacky func to bypass MFA if creds haven't expired.
# stands for change role
function cr(){
  # Let's set the env that called this func.
  local aws_environment
  aws_environment=$@

  source ~/.aws/assume-role-creds.$aws_environment
  export AWS_DEFAULT_PROFILE="${aws_environment}"
}

function aws-docker-login(){
  local aws_environment
  aws_environment=$@

  if [[ $aws_environment == "" ]]
  then
    echo "You have to pick an environment ðŸ™ˆ"
    return 0
  fi

  echo "Loading ${aws_environment} credentials"
  cr $aws_environment

  # TODO: Make the account ID not hardcoded.
  echo "Trying to login to ECR with ${aws_environment} credentials"
  aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 911322667399.dkr.ecr.eu-central-1.amazonaws.com
}
